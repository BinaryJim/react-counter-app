{"version":3,"sources":["store/counter-context.js","store/counter-action-types.js","store/counter-reducer.js","components/counter-container/counter-container.js","components/counter-output/counter-output.js","components/button/button.js","components/counter-actions/counter-actions.js","App.js","store/use-counter-store.js","index.js"],"names":["CounterStateContext","React","createContext","CounterDispatchContext","useCounterStateContext","useContext","counterActionTypes","counterReducer","state","action","type","count","Error","CounterContainer","props","className","children","CounterOutput","Button","buttonClasses","classnames","classes","appearance","id","onClick","disabled","additionalAttrs","defaultProps","CounterActions","increment","decrement","reset","App","useReducer","dispatch","actions","useCounterStore","Provider","value","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"6LAEA,MAAMA,EAAsBC,IAAMC,gBAC5BC,EAAyBF,IAAMC,gBAE/BE,EAAyB,IAAMC,qBAAWL,G,WCLzC,MAAMM,EACA,YADAA,EAEA,YAFAA,EAGJ,QCDIC,EAAiB,CAACC,EAAOC,KACpC,OAAQA,EAAOC,MACb,KAAKJ,EACH,MAAO,CAAEK,MAAOH,EAAMG,MAAQ,GAChC,KAAKL,EACH,MAAO,CAAEK,MAAOH,EAAMG,MAAQ,GAChC,KAAKL,EACH,MAAO,CAAEK,MAAO,GAClB,QACE,MAAM,IAAIC,MAAJ,iCAAoCH,EAAOC,SCR1CG,EAAoBC,GACxB,yBAAKC,UAAU,qBAAqBD,EAAME,UCDtCC,EAAgB,KAC3B,MAAMN,EAAQP,IAEd,OACE,6BAASW,UAAU,kBACjB,0BAAMA,UAAU,yBAAyBJ,K,oBCJxC,MAAMO,EAAUJ,IACrB,MAAMK,EAAgBC,IAAW,MAAON,EAAMO,QAAS,CACrD,CAAC,QAAD,OAASP,EAAMQ,cAAe,IAGhC,OACE,0CACEC,GAAIT,EAAMS,GACVR,UAAWI,EACXK,QAASV,EAAMU,QACfC,SAAUX,EAAMW,UACZX,EAAMY,iBAETZ,EAAME,WAoCbE,EAAOS,aAAe,CACpBL,WAAY,UACZG,UAAU,GCnDL,MAAMG,EAAiB,KAC5B,MAAMjB,EAAQP,IADoB,ENEIC,qBAAWF,GMAzC0B,EAF0B,EAE1BA,UAAWC,EAFe,EAEfA,UAAWC,EAFI,EAEJA,MAE9B,OACE,4BAAQhB,UAAU,mBAChB,kBAACG,EAAD,CACEG,QAAQ,6DACRI,SAAUd,GAAS,EACnBa,QAASM,GAHX,KAQA,kBAACZ,EAAD,CACEG,QAAQ,6DACRG,QAASK,GAFX,KAOA,kBAACX,EAAD,CACEG,QAAQ,yDACRC,WAAW,SACXG,UAAWd,EAAQ,EACnBa,QAASO,GAJX,W,MCbS,SAASC,IAAO,MAAD,ECRC,MAC7B,MADmC,EAGTC,qBAAW1B,EAFhB,CAAEI,MAAO,IADK,mBAG5BH,EAH4B,KAGrB0B,EAHqB,KAqBnC,MAAO,CAAEvB,MAhBKH,EAAMG,MAgBJwB,QAdA,CACdN,UAAW,IAAMK,EAAS,CAAExB,KAAMJ,IAClCwB,UAAW,IAAMI,EAAS,CAAExB,KAAMJ,IAClCyB,MAAO,IAAMG,EAAS,CAAExB,KAAMJ,ODDL8B,GAAnBzB,EADoB,EACpBA,MAAOwB,EADa,EACbA,QAEf,OACE,kBAACnC,EAAoBqC,SAArB,CAA8BC,MAAO3B,GACnC,kBAACR,EAAuBkC,SAAxB,CAAiCC,MAAOH,GACtC,yBAAKpB,UAAU,OACb,kBAACF,EAAD,KACE,kBAACI,EAAD,MACA,kBAACW,EAAD,UEhBZ,MAAMW,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACZ,EAAD,OAEFO,I","file":"static/js/main.2259830b.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\n\nconst CounterStateContext = React.createContext();\nconst CounterDispatchContext = React.createContext();\n\nconst useCounterStateContext = () => useContext(CounterStateContext);\nconst useCounterDispatchContext = () => useContext(CounterDispatchContext);\n\nexport {\n  CounterStateContext,\n  CounterDispatchContext,\n  useCounterStateContext,\n  useCounterDispatchContext,\n};\n","export const counterActionTypes = {\n  increment: \"increment\",\n  decrement: \"decrement\",\n  reset: \"reset\",\n};\n","import { counterActionTypes } from \"./counter-action-types\";\n\nexport const counterReducer = (state, action) => {\n  switch (action.type) {\n    case counterActionTypes.increment:\n      return { count: state.count + 1 };\n    case counterActionTypes.decrement:\n      return { count: state.count - 1 };\n    case counterActionTypes.reset:\n      return { count: 0 };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const CounterContainer = (props) => {\n  return <div className=\"counter-container\">{props.children}</div>;\n};\n\nCounterContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import React from \"react\";\nimport { useCounterStateContext } from \"../../store\";\n\nexport const CounterOutput = () => {\n  const count = useCounterStateContext();\n\n  return (\n    <section className=\"counter-output\">\n      <span className=\"counter-output__count\">{count}</span>\n    </section>\n  );\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nexport const Button = (props) => {\n  const buttonClasses = classnames(\"btn\", props.classes, {\n    [`btn--${props.appearance}`]: true,\n  });\n\n  return (\n    <button\n      id={props.id}\n      className={buttonClasses}\n      onClick={props.onClick}\n      disabled={props.disabled}\n      {...props.additionalAttrs}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /*\n  Allows the passing of a unique ID to the root DOM node ID attribute\n  */\n  id: PropTypes.string,\n  /*\n  Allows the passing of multiple CSS classNames to the root DOM node class attribute\n  */\n  classes: PropTypes.string,\n  /*\n  Determines the style of the Button component, defaults to \"default\"\n  */\n  appearance: PropTypes.oneOf([\"default\", \"danger\"]),\n  /*\n  Sets a callback function onClick of the Button, returns event object\n  */\n  onClick: PropTypes.func,\n  /*\n  Toggles the disabled attribute value, defaults to \"false\"\n  */\n  disabled: PropTypes.bool,\n  /*\n  Allows the passing of content within the Button (typically the label)\n  */\n  children: PropTypes.node,\n  /*\n  Allows the passing of additional DOM attributes to the button DOM node\n  */\n  additionalAttrs: PropTypes.object,\n};\n\nButton.defaultProps = {\n  appearance: \"default\",\n  disabled: false,\n};\n","import React from \"react\";\nimport { useCounterStateContext, useCounterDispatchContext } from \"../../store\";\nimport { Button } from \"../button\";\n\nexport const CounterActions = () => {\n  const count = useCounterStateContext();\n  const { increment, decrement, reset } = useCounterDispatchContext();\n\n  return (\n    <footer className=\"counter-actions\">\n      <Button\n        classes=\"counter-actions__action counter-actions__action--decrement\"\n        disabled={count <= 0}\n        onClick={decrement}\n      >\n        -\n      </Button>\n\n      <Button\n        classes=\"counter-actions__action counter-actions__action--increment\"\n        onClick={increment}\n      >\n        +\n      </Button>\n\n      <Button\n        classes=\"counter-actions__action counter-actions__action--reset\"\n        appearance=\"danger\"\n        disabled={!count > 0}\n        onClick={reset}\n      >\n        Reset\n      </Button>\n    </footer>\n  );\n};\n","import React from \"react\";\nimport {\n  CounterStateContext,\n  CounterDispatchContext,\n  useCounterStore,\n} from \"./store\";\n\nimport { CounterContainer } from \"./components/counter-container\";\nimport { CounterOutput } from \"./components/counter-output\";\nimport { CounterActions } from \"./components/counter-actions\";\nimport \"./scss/styles.scss\";\n\nexport default function App() {\n  const { count, actions } = useCounterStore();\n\n  return (\n    <CounterStateContext.Provider value={count}>\n      <CounterDispatchContext.Provider value={actions}>\n        <div className=\"app\">\n          <CounterContainer>\n            <CounterOutput />\n            <CounterActions />\n          </CounterContainer>\n        </div>\n      </CounterDispatchContext.Provider>\n    </CounterStateContext.Provider>\n  );\n}\n","import { useReducer } from \"react\";\nimport { counterActionTypes } from \"./counter-action-types\";\nimport { counterReducer } from \"./counter-reducer\";\n\nexport const useCounterStore = () => {\n  const initialState = { count: 0 };\n\n  const [state, dispatch] = useReducer(counterReducer, initialState);\n\n  const count = state.count;\n\n  const actions = {\n    increment: () => dispatch({ type: counterActionTypes.increment }),\n    decrement: () => dispatch({ type: counterActionTypes.decrement }),\n    reset: () => dispatch({ type: counterActionTypes.reset }),\n  };\n\n  /*\n  For later enhancement to add local storage persistance, much like redux \"store.subscribe\"\n\n  useEffect(() => {\n    console.log('Count changed')\n  }, [state.count])\n  */\n\n  return { count, actions };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}